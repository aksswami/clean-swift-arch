//
//  CreateOrderViewController.swift
//  ViperExample
//
//  Created by Amit kumar Swami on 09/01/16.
//  Copyright (c) 2016 Aks. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol CreateOrderViewControllerInput {
    func displayExpirationDate(viewModel: CreateOrder_FormatExpirationDate_ViewModel)

    func displaySomething(viewModel: CreateOrderViewModel)
}

protocol CreateOrderViewControllerOutput {
    var shippingMethods: [String] { get }
    func formatExpirationDate(request: CreateOrder_FormatExpirationDate_Request)
    func doSomething(request: CreateOrderRequest)
}

class CreateOrderViewController: UITableViewController, CreateOrderViewControllerInput, UIPickerViewDelegate, UIPickerViewDataSource, UITextFieldDelegate {
    var output: CreateOrderViewControllerOutput!
    var router: CreateOrderRouter!
    
    
    @IBOutlet var textFields: [UITextField]!
    
    @IBOutlet weak var shipmentMethodTextField: UITextField!
    @IBOutlet weak var shipmentMethodPicker: UIPickerView!
    
    @IBOutlet weak var expirationDateTextField: UITextField!
    @IBOutlet weak var expirationDatePicker: UIDatePicker!
    
    // MARK: Object lifecycle
    
    override func awakeFromNib() {
        super.awakeFromNib()
        CreateOrderConfigurator.sharedInstance.configure(self)
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        doSomethingOnLoad()
        setUpUI()
        configurePicker()
    }
    
    func setUpUI() {
        shipmentMethodPicker.delegate = self
        shipmentMethodPicker.dataSource = self
    }
    
    func configurePicker() {
        shipmentMethodTextField.inputView = shipmentMethodPicker
        expirationDateTextField.inputView = expirationDatePicker
    }
    
    // MARK: Event handling
    func doSomethingOnLoad() {
        // NOTE: Ask the Interactor to do some work
        
        let request = CreateOrderRequest()
        output.doSomething(request)
    }
    
    // MARK: Display logic
    
    func displaySomething(viewModel: CreateOrderViewModel) {
        // NOTE: Display the result from the Presenter
        
        // nameTextField.text = viewModel.name
    }
    
    func textFieldShouldReturn(textField: UITextField) -> Bool {
        textField.resignFirstResponder()
        if let index = textFields.indexOf(textField) {
            if index < textFields.count - 1 {
                let nextTextField = textFields[index + 1]
                nextTextField.becomeFirstResponder()
            }
        }
        return true
    }

    override func tableView(tableView: UITableView, didSelectRowAtIndexPath indexPath: NSIndexPath) {
        if let cell = tableView.cellForRowAtIndexPath(indexPath) {
            for textField in textFields {
                if textField.isDescendantOfView(cell) {
                    textField.becomeFirstResponder()
                }
            }
        }
    }
    
    func numberOfComponentsInPickerView(pickerView: UIPickerView) -> Int {
        return 1
    }
    
    func pickerView(pickerView: UIPickerView, numberOfRowsInComponent component: Int) -> Int {
        return output.shippingMethods.count
    }
    
    func pickerView(pickerView: UIPickerView, titleForRow row: Int, forComponent component: Int) -> String? {
        return output.shippingMethods[row]
    }
    
    func pickerView(pickerView: UIPickerView, didSelectRow row: Int, inComponent component: Int) {
        shipmentMethodTextField.text = output.shippingMethods[row]
    }
    
    @IBAction func expirationPickerValueChanged(sender: AnyObject) {
        let date = expirationDatePicker.date
        let request = CreateOrder_FormatExpirationDate_Request(date: date)
        output.formatExpirationDate(request)
    }
    
    func displayExpirationDate(viewModel: CreateOrder_FormatExpirationDate_ViewModel) {
        let date = viewModel.date
        expirationDateTextField.text = date
    }
}
